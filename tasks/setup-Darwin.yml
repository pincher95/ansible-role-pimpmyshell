---
- name: Install CLI applications
  community.general.homebrew:
    name: "{{ common_packages }}"
    state: present
    upgrade_all: true

- name: Install Graphical applications
  community.general.homebrew_cask:
    name: "{{ graphical_apps }}"
    state: present

- name: Install extra CLI applications
  block:
    - name: Set extra packages to install
      ansible.builtin.set_fact:
        extra_packages: "{{ 'fzf' if enable_fzf | default(true) else '' + 'exa' if enable_exa | default(true) else '' + 'bat' if enable_bat | default(true) else '' + 'fd' if enable_fd | default(true) else '' }}"

    - name: Install fzf
      community.general.homebrew:
        name: "{{ extra_packages }}"
        state: present

- name: Change default shell to zsh
  block:
    - name: Check that user exists
      ansible.builtin.command: "grep -q {{ ansible_env['USER'] }} /etc/passwd"
      changed_when: false
      ignore_errors: true
      register: userexist

    - name: Block user if user exists
      ansible.builtin.user:
        name: "{{ ansible_env['USER'] }}"
        shell: "{{ zsh_shell_path }}"
      when: userexist is succeeded

- name: Install Oh-My-Zsh
  block:
    - name: Check if Oh-My-Zsh is already installed
      ansible.builtin.stat:
        path: /{{ ansible_env['HOME'] }}/.oh-my-zsh
      ignore_errors: true
      register: omz_exist

    - name: Download Oh-My-Zsh
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: /tmp/install.sh
        mode: 0755

    - name: Install Oh-My-Zsh
      ansible.builtin.command:
        cmd: "/tmp/install.sh --unattended"
      register: omz_installed
      changed_when: 
        - omz_installed.rc == 0
        - "'molecule-idempotence-notest' not in ansible_skip_tags"
      when: omz_exist.stat is defined and omz_exist.stat.exists is false

    # TODO make more generic for other plugins
    - name: Download Oh-My-Zsh Plugins
      ansible.builtin.git:
        name: "https://github.com/zsh-users/{{ item }}"
        dest: "{{ zsh_custom_path }}/plugins/{{ item }}"
        clone: true
        version: master
      when: enable_zsh_plugins
      loop: "{{ zsh_plugins }}"

    - name: Enable Oh-My-Zsh Plugins
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env['HOME'] }}/.zshrc"
        regexp: "^plugins=(.*)"
        line: "plugins=({{ zsh_plugins | join(' ') + ' fzf' if enable_fzf | default(true) else '' }})"
        state: present
      when: enable_zsh_plugins | default(true)

    - name: Install Powerline10k
      ansible.builtin.git:
        name: "https://github.com/romkatv/powerlevel10k"
        dest: "{{ zsh_custom_path }}/themes/powerlevel10k"
        clone: true
        version: master
      when: enable_zsh_powerline10k | default(true)

    - name: Enable Powerline10k
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env['HOME'] }}/.zshrc"
        regexp: "^ZSH_THEME=.*"
        line: "ZSH_THEME=\"powerlevel10k/powerlevel10k\""
        state: present
      when: enable_zsh_powerline10k
  when: prompt_renderer == "oh-my-zsh"

- name: Install Oh-My-Posh
  block:
    - name: Add Oh-My-Posh Tap
      community.general.homebrew_tap:
        name: jandedobbeleer/oh-my-posh
        state: present

    - name: Install Oh-My-Posh
      community.general.homebrew:
        name:
          - "{{ prompt_renderer }}"
        state: present
  when: prompt_renderer == "oh-my-posh"

- name: Create exa/bat aliases
  ansible.builtin.lineinfile:
    dest: "{{ ansible_env['HOME'] }}/.zshrc"
    line: "alias {{ item.alias }}='{{ item.command }}'"  # exa/bat alias for zsh shell
    state: present
  loop:
    - { alias: "ll", command: "exa -la" }
    - { alias: "cat", command: "bat" }
  when:
    - enable_exa | default(true)
    - enable_bat | default(true)

- name: Configure fzf
  ansible.builtin.blockinfile:
    path: "{{ ansible_env['HOME'] }}/.zshrc"
    content: "{{ fzf_env_config }}"
    state: present
  when: enable_fzf | default(true)
