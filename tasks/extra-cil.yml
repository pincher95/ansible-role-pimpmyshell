---
- name: Install Github python library
  ansible.builtin.pip:
    name: github3.py
    state: present
    executable: /usr/bin/pip3

- name: Install fzf
  block:
    - name: Clone fzf repo
      ansible.builtin.git:
        name: https://github.com/junegunn/fzf.git
        dest: "{{ ansible_env['HOME'] }}/.fzf"
        clone: true
        version: master

    - name: Install fzf
      ansible.builtin.command:
        cmd: "{{ ansible_env['HOME'] }}/.fzf/install --key-bindings --completion --no-update-rc"
      register: register_output
      changed_when: register_output.rc != 0

    - name: Configure fzf
      ansible.builtin.blockinfile:
        path: "{{ ansible_env['HOME'] }}/.zshrc"
        content: "{{ fzf_env_config }}"
        state: present
      when: enable_fzf | default(true)
  when:
    # - ansible_os_family == "Darwin" or ansible_os_family == "Linux"
    - enable_fzf | default(true)

- name: Install exa
  block:
    - name: Set OS variant
      ansible.builtin.set_fact:
        os_variant: '{{ "linux" if ansible_system == "Linux" else "macos" if ansible_system == "Darwin" }}'

    - name: Create exa temp directory
      ansible.builtin.file:
        path: "/tmp/exa"
        state: directory
        mode: 0755

    - name: Get exa github release version
      community.general.github_release:
        user: ogham
        repo: exa
        action: latest_release
      register: github_release

    - name: Download exa package
      ansible.builtin.unarchive:
        src: "https://github.com/ogham/exa/releases/download/{{ github_release['tag'] }}/exa-{{ os_variant }}-{{ ansible_architecture }}-{{ github_release['tag'] }}.zip"
        dest: /tmp/exa
        remote_src: true

    - name: Install exa
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0755
        remote_src: true
      loop:
        - { src: /tmp/exa/bin/exa, dest: /usr/local/bin/ }
        - { src: /tmp/exa/completions/exa.bash, dest: /etc/bash_completion.d/ }
        - { src: /tmp/exa/completions/exa.fish, dest: /usr/share/fish/vendor_completions.d/ }
        - { src: /tmp/exa/completions/exa.zsh, dest: /usr/local/share/zsh/site-functions/ }
        - { src: /tmp/exa/man/exa.1, dest: /usr/share/man/man1/ }
        - { src: /tmp/exa/man/exa_colors.5, dest: /usr/share/man/man5/ }
      become: true

    - name: Create exa alias
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env['HOME'] }}/.zshrc"
        line: "alias {{ item.alias }}='{{ item.command }}'"  # exa alias for zsh shell
        state: present
      loop:
        - { alias: "ll", command: "exa -la" }
  when:
    - enable_exa | default(true)

- name: Install bat
  block:
    - name: Set OS variant
      ansible.builtin.set_fact:
        os_variant: '{{ "unknown-linux-gnu" if ansible_system == "Linux" else "apple-darwin" if ansible_system == "Darwin" }}'

    - name: Create bat temp directory
      ansible.builtin.file:
        path: "/tmp/bat"
        state: directory
        mode: 0755

    - name: Get bat github release version
      community.general.github_release:
        user: sharkdp
        repo: bat
        action: latest_release
      register: github_release

    - name: Download bat package
      ansible.builtin.unarchive:
        src: "https://github.com/sharkdp/bat/releases/download/{{ github_release['tag'] }}/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}.tar.gz"
        dest: /tmp/bat
        remote_src: true

    - name: Install bat
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0755
        remote_src: true
      loop:
        - { src: "/tmp/bat/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/bat", dest: /usr/local/bin/ }
        - { src: "/tmp/bat/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/bat.bash", dest: /etc/bash_completion.d/ }
        - { src: "/tmp/bat/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/bat.fish", dest: /usr/share/fish/vendor_completions.d/ }
        - { src: "/tmp/bat/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/bat.zsh", dest: /usr/local/share/zsh/site-functions/ }
        - { src: "/tmp/bat/bat-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/bat.1", dest: /usr/share/man/man1/ }
      become: true

    - name: Create bat alias
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env['HOME'] }}/.zshrc"
        line: "alias {{ item.alias }}='{{ item.command }}'"  # bat alias for zsh shell
        state: present
      loop:
        - { alias: "cat", command: "bat" }
  when:
    - enable_bat | default(true)

- name: Install fd
  block:
    - name: Set OS variant
      ansible.builtin.set_fact:
        os_variant: '{{ "unknown-linux-gnu" if ansible_system == "Linux" else "apple-darwin" if ansible_system == "Darwin" }}'

    - name: Create fd temp directory
      ansible.builtin.file:
        path: "/tmp/fd"
        state: directory
        mode: 0755

    - name: Get fd github release version
      community.general.github_release:
        user: sharkdp
        repo: fd
        action: latest_release
      register: github_release

    - name: Download fd package
      ansible.builtin.unarchive:
        src: "https://github.com/sharkdp/fd/releases/download/{{ github_release['tag'] }}/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}.tar.gz"
        dest: /tmp/fd
        remote_src: true

    - name: Install fd
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: 0755
        remote_src: true
      loop:
        - { src: "/tmp/fd/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/fd", dest: /usr/local/bin/ }
        - { src: "/tmp/fd/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/fd.bash", dest: /etc/bash_completion.d/ }
        - { src: "/tmp/fd/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/fd.fish", dest: /usr/share/fish/vendor_completions.d/ }
        # - { src: "/tmp/fd/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/autocomplete/fd.zsh", dest: /usr/local/share/zsh/site-functions/ }
        - { src: "/tmp/fd/fd-{{ github_release['tag'] }}-{{ ansible_architecture }}-{{ os_variant }}/fd.1", dest: /usr/share/man/man1/ }
      become: true
  when:
    - enable_fd | default(true)
